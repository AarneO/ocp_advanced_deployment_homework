---
- name: Prepare GUID environment variable across all hosts
  hosts: all
  tasks:
    - name: All GUID env variable
      shell: export GUID=`hostname | cut -d"." -f2`; echo "export GUID=$GUID" >> $HOME/.bashrc
  tags:
    - config

- name: Generate Inventory Hosts File from template
  hosts: localhost
  connection: local
  become: false
  vars_files:
    - "./env_vars.yml"
  tasks:
    - name: Generate /etc/ansible/hosts file with lab hosts template
      template:
        backup: yes
        src: "./hoststempl.j2"
        dest: "/etc/ansible/hosts"

  tags:
    - config


- name: Execute the openshift-ansible prerequisites
  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml
  tags:
    - install

- name: Execute the openshift-ansible Deployer
  import_playbook: /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
  tags:
    - install

- name: Verify OpenShift Cluster
  hosts: masters[0]
  tasks:
    - name: copy the .kube directory from master1 to your bastion
      fetch: 
        src: "/root/.kube/config"
        dest: "/root/.kube/config"
        flat: "yes"
  tags:
    - postinst

- name: Post installation configuration
  hosts: localhost
  tasks:
    - name: make sure you are system:dmin
      shell: oc whoami | grep system:admin
  tags:
    - postinst

- name: Create PVs for Users
  hosts: nfs
  tasks:
    - file:
        dest: "/srv/nfs/user-vols/pv{{ item }}"
        state: directory
      with_sequence: start=1 end=50 stride=1
    - lineinfile:
        path: /etc/exports.d/openshift-uservols.exports
        line: "/srv/nfs/user-vols/pv{{ item }} *(rw,root_squash)"
        create: yes
      with_sequence: start=1 end=50 stride=1
    - systemd:
        state: restarted
        daemon_reload: yes
        name: nfs-server
    - file:
        path: /srv/nfs
        state: directory
        owner: nfsnobody
        group: nfsnobody
        mode: 0777
        recurse: yes
  tags:
    - postinst

- name: Create 25 definitions files for PVs 5G size
  hosts: localhost
  tasks:
    - name: "create def files for 5G PVs"
      shell: "./scripts/pvs_5Gsize.sh"
  tags:
    - postinst

- name: Create 25 definitions files for PVs 10G size
  hosts: localhost
  tasks:
    - name: "create def files for 10G PVs"
      shell: "./scripts/pvs_10Gsize.sh"
  tags:
    - postinst

- name: Create all PVs from definitions files
  hosts: localhost
  tasks:
    - name: "import files"
      shell: "cat /root/pvs/* | oc create -f -"
  tags:
    - postinst

- name: Fix NFS Persistent Volume Recycling
  hosts: nodes
  tasks:
    - name: "fix commands for NFS persistent volume recycling"
      shell: "docker pull registry.access.redhat.com/openshift3/ose-recycler:latest && docker tag registry.access.redhat.com/openshift3/ose-recycler:latest registry.access.redhat.com/openshift3/ose-recycler:v3.9.30"

  tags:
    - postinst

- name: Apply default limits to projects
  hosts: localhost
  tasks:
    - name: "apply default project template"
      shell: "oc create -f ./templates/project-template.yaml -n default"
  tags:
    - projectconfig

- name: Change master configs to new project template
  hosts: masters
  tasks:
    - name: "modify master-config.yaml"
      lineinfile:
        regexp: "  projectRequestTemplate"
        dest: "/etc/origin/master/master-config.yaml"
        line: '  projectRequestTemplate: "default/project-request"'
        state: present
      register: master_config

    - name: Restart master API service
      service:
        name: atomic-openshift-master-api
        state: restarted
      when:
        - master_config.changed
  tags:
    - projectconfig



- name: Smoke Test
  hosts: localhost
  tasks:
    - name: "Smoke testing with nodejs app"
      shell: "oc new-project smoke-test && oc new-app nodejs-mongo-persistent"

  tags:
    - smoketest

- name: CICD demo git
  hosts: localhost
  tasks:
    - git:
        repo: 'https://github.com/AarneO/openshift-cd-demo.git'
        dest: /root/openshift-cd-demo
        version: ocp-3.9
  tags:
    - cicd

- name: CICD demo deploy
  hosts: localhost
  tasks:
    - name: "Provision demo environment"
      shell: "/root/openshift-cd-demo/scripts/provision.sh --user andrew deploy --project-suffix homeworkdemo"
  tags:
    - cicd

- name: CICD pipeline start
  hosts: localhost
  tasks:
    - name: "Execute pipeline"
      shell: "oc start-build tasks-pipeline -n cicd-homeworkdemo"
  tags:
    - cicd
  
- name: HPA configuration on production deployment of openshift-tasks
  hosts: localhost
  tasks:
    - name: "Add autoscaling to deploymentconfig of prod tasks"
      shell: "oc autoscale dc/tasks -n stage-homeworkdemo --min 1 --max 10 --cpu-percent=70"
  tags:
    - cicd

- name: Add user based on parameters
  hosts: localhost
  tasks:
    - name: "create $user hash"
      shell: "htpasswd -bn {{ user }} {{ pass}} "
      register: userhash

    - name: add user to htpasswd
      shell: "echo {{ userhash }} >> /root/htpasswd.openshift"
      register: htpasswdopenshift

  tags:
    - useradd

- name: sync htpasswd file
  hosts: masters
  tasks:
    - name: sync file to all hosts
      copy:
        src: /root/htpasswd.openshift
        dst: /etc/origin/master/htpasswd
      when: htpasswdopenshift.changed

  tags:
    - useradd

#- name: Creation of users for Alpha and Beta clients

#- name: Assigning labels to the users according to its group

#- name: Setup the environment for Alpha and Beta clients